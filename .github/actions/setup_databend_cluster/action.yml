name: "Setup Stateful Cluster Linux"
description: "Running stateful tests in cluster mode"
inputs:
  version:
    description: "query and meta service version"
    required: true
    default: "1.2.616-nightly"
  target:
    description: ""
    required: true
    default: "x86_64-unknown-linux-gnu"
runs:
  using: "composite"
  steps:

    - name: Minio Setup for (ubuntu-latest only)
      shell: bash
      run: |
        docker run -d --network host --name minio \
                -e "MINIO_ACCESS_KEY=minioadmin" \
                -e "MINIO_SECRET_KEY=minioadmin" \
                -e "MINIO_ADDRESS=:9900" \
                -v /tmp/data:/data \
                -v /tmp/config:/root/.minio \
                minio/minio server /data

        export AWS_ACCESS_KEY_ID=minioadmin
        export AWS_SECRET_ACCESS_KEY=minioadmin
        export AWS_EC2_METADATA_DISABLED=true

        aws --endpoint-url http://127.0.0.1:9900/ s3 mb s3://testbucket

    - name: Download binary and extract into target directory
      shell: bash
      run: |
        wget  --progress=bar:force:noscroll https://github.com/datafuselabs/databend/releases/download/v${{ inputs.version }}/databend-v${{ inputs.version }}-${{ inputs.target }}.tar.gz
        mkdir -p databend
        tar -xzf databend-v${{ inputs.version }}-${{ inputs.target }}.tar.gz -C databend --strip-components=1
        rm databend-v${{ inputs.version }}-${{ inputs.target }}.tar.gz

    - name: Start Databend Cluster
      shell: bash
      run: |
        # Get absolute path of wait_tcp.py
        WAIT_TCP_PATH=$(realpath ./scripts/wait_tcp.py)
        echo "Absolute path of wait_tcp.py: $WAIT_TCP_PATH"
        echo "WAIT_TCP_PATH=$WAIT_TCP_PATH" >> $GITHUB_ENV

        # Update deploy_cluster.sh with absolute path
        sed -i "s|python3 scripts/wait_tcp.py|python3 $WAIT_TCP_PATH|g" ./scripts/deploy/deploy_cluster.sh
        sed -i "s|python3 ./scripts/wait_tcp.py|python3 $WAIT_TCP_PATH|g" ./scripts/deploy/deploy_cluster.sh

        # Add debugging to deploy_cluster.sh
        sed -i '1s/^/set -x\n/' ./scripts/deploy/deploy_cluster.sh
        sed -i '2s/^/pwd\n/' ./scripts/deploy/deploy_cluster.sh

        # Make scripts executable (if not already)
        chmod +x $WAIT_TCP_PATH
        chmod +x ./scripts/deploy/deploy_cluster.sh

        # Run deploy script
        echo "Current working directory: $(pwd)"
        echo "Content of scripts directory:"
        ls -R ./scripts
        echo "Running deploy_cluster.sh:"
        bash ./scripts/deploy/deploy_cluster.sh
